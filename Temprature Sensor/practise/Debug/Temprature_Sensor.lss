
Temprature_Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c44  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000c44  00000cb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001674  00000000  00000000  00000cc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000004c0  00000000  00000000  0000233c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000100  00000000  00000000  00002800  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000db4  00000000  00000000  00002900  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000364  00000000  00000000  000036b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007b1  00000000  00000000  00003a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  000041cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002d3  00000000  00000000  00004388  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000792  00000000  00000000  0000465b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e4       	ldi	r30, 0x44	; 68
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 36       	cpi	r26, 0x6E	; 110
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8b 04 	call	0x916	; 0x916 <main>
  8a:	0c 94 20 06 	jmp	0xc40	; 0xc40 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_vEnable>:
}
void  LCD_vEnable()
{	
	
	//sending falling edge
	DIO_WRITE('b',E,1);
  92:	82 e6       	ldi	r24, 0x62	; 98
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	8f e9       	ldi	r24, 0x9F	; 159
  9e:	9f e0       	ldi	r25, 0x0F	; 15
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <LCD_vEnable+0xe>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <LCD_vEnable+0x14>
  a6:	00 00       	nop
	_delay_ms(2);
	DIO_WRITE('b',E,0);
  a8:	82 e6       	ldi	r24, 0x62	; 98
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	40 e0       	ldi	r20, 0x00	; 0
  ae:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
  b2:	8f e9       	ldi	r24, 0x9F	; 159
  b4:	9f e0       	ldi	r25, 0x0F	; 15
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <LCD_vEnable+0x24>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <LCD_vEnable+0x2a>
  bc:	00 00       	nop
	_delay_ms(2);
}
  be:	08 95       	ret

000000c0 <LCD_vSend_cmd>:
void LCD_vSend_cmd( char cmd)
{
  c0:	cf 93       	push	r28
  c2:	c8 2f       	mov	r28, r24
		DIO_WRITE_PORT(PORT,cmd);
		DIO_WRITE('B',RS,0);//write to control register
		LCD_vEnable();
		_delay_ms(1);
	#elif defined four_bit_mode
		DIO_WRITE_LowNipple(PORT,cmd>>4); 
  c4:	68 2f       	mov	r22, r24
  c6:	62 95       	swap	r22
  c8:	6f 70       	andi	r22, 0x0F	; 15
  ca:	83 e6       	ldi	r24, 0x63	; 99
  cc:	0e 94 22 04 	call	0x844	; 0x844 <DIO_WRITE_LowNipple>
		DIO_WRITE('B',RS,0);
  d0:	82 e4       	ldi	r24, 0x42	; 66
  d2:	61 e0       	ldi	r22, 0x01	; 1
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
		LCD_vEnable();
  da:	0e 94 49 00 	call	0x92	; 0x92 <LCD_vEnable>
  de:	8f ec       	ldi	r24, 0xCF	; 207
  e0:	97 e0       	ldi	r25, 0x07	; 7
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <LCD_vSend_cmd+0x22>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <LCD_vSend_cmd+0x28>
  e8:	00 00       	nop
		_delay_ms(1);
		DIO_WRITE_LowNipple(PORT,cmd);
  ea:	83 e6       	ldi	r24, 0x63	; 99
  ec:	6c 2f       	mov	r22, r28
  ee:	0e 94 22 04 	call	0x844	; 0x844 <DIO_WRITE_LowNipple>
		DIO_WRITE('B',RS,0);
  f2:	82 e4       	ldi	r24, 0x42	; 66
  f4:	61 e0       	ldi	r22, 0x01	; 1
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
		LCD_vEnable();
  fc:	0e 94 49 00 	call	0x92	; 0x92 <LCD_vEnable>
 100:	8f ec       	ldi	r24, 0xCF	; 207
 102:	97 e0       	ldi	r25, 0x07	; 7
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_vSend_cmd+0x44>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_vSend_cmd+0x4a>
 10a:	00 00       	nop
		_delay_ms(1);
	#endif
}
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <LCD_vInit>:
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	91 ee       	ldi	r25, 0xE1	; 225
 114:	a4 e0       	ldi	r26, 0x04	; 4
 116:	81 50       	subi	r24, 0x01	; 1
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	a0 40       	sbci	r26, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <LCD_vInit+0x6>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <LCD_vInit+0x10>
 120:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE);
	_delay_ms(1);
	#elif defined four_bit_mode
	//write on low nipple
	DIO_SET_PIN_DIRECTION(PORT,0,1);
 122:	83 e6       	ldi	r24, 0x63	; 99
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	41 e0       	ldi	r20, 0x01	; 1
 128:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION(PORT,1,1);
 12c:	83 e6       	ldi	r24, 0x63	; 99
 12e:	61 e0       	ldi	r22, 0x01	; 1
 130:	41 e0       	ldi	r20, 0x01	; 1
 132:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION(PORT,2,1);
 136:	83 e6       	ldi	r24, 0x63	; 99
 138:	62 e0       	ldi	r22, 0x02	; 2
 13a:	41 e0       	ldi	r20, 0x01	; 1
 13c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION(PORT,3,1);
 140:	83 e6       	ldi	r24, 0x63	; 99
 142:	63 e0       	ldi	r22, 0x03	; 3
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION(PORT,4,1);
 14a:	83 e6       	ldi	r24, 0x63	; 99
 14c:	64 e0       	ldi	r22, 0x04	; 4
 14e:	41 e0       	ldi	r20, 0x01	; 1
 150:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION('b',E,1);
 154:	82 e6       	ldi	r24, 0x62	; 98
 156:	60 e0       	ldi	r22, 0x00	; 0
 158:	41 e0       	ldi	r20, 0x01	; 1
 15a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION('b',RS,1);
 15e:	82 e6       	ldi	r24, 0x62	; 98
 160:	61 e0       	ldi	r22, 0x01	; 1
 162:	41 e0       	ldi	r20, 0x01	; 1
 164:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_SET_PIN_DIRECTION('b',RW,1);
 168:	82 e6       	ldi	r24, 0x62	; 98
 16a:	62 e0       	ldi	r22, 0x02	; 2
 16c:	41 e0       	ldi	r20, 0x01	; 1
 16e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_SET_PIN_DIRECTION>
	DIO_WRITE('b',RW,0);
 172:	82 e6       	ldi	r24, 0x62	; 98
 174:	62 e0       	ldi	r22, 0x02	; 2
 176:	40 e0       	ldi	r20, 0x00	; 0
 178:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
	LCD_vSend_cmd(RETURN_HOME);
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 182:	af e1       	ldi	r26, 0x1F	; 31
 184:	be e4       	ldi	r27, 0x4E	; 78
 186:	11 97       	sbiw	r26, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_vInit+0x76>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_vInit+0x7c>
 18c:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(FOUR_BITS);
 18e:	88 e2       	ldi	r24, 0x28	; 40
 190:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 194:	8f ec       	ldi	r24, 0xCF	; 207
 196:	97 e0       	ldi	r25, 0x07	; 7
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_vInit+0x88>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <LCD_vInit+0x8e>
 19e:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(DISPLAY_ON);
 1a0:	8c e0       	ldi	r24, 0x0C	; 12
 1a2:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 1a6:	af ec       	ldi	r26, 0xCF	; 207
 1a8:	b7 e0       	ldi	r27, 0x07	; 7
 1aa:	11 97       	sbiw	r26, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_vInit+0x9a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_vInit+0xa0>
 1b0:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(ClEAR_SCREEN);
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 1b8:	8f e1       	ldi	r24, 0x1F	; 31
 1ba:	9e e4       	ldi	r25, 0x4E	; 78
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <LCD_vInit+0xac>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <LCD_vInit+0xb2>
 1c2:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE);
 1c4:	86 e0       	ldi	r24, 0x06	; 6
 1c6:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 1ca:	af ec       	ldi	r26, 0xCF	; 207
 1cc:	b7 e0       	ldi	r27, 0x07	; 7
 1ce:	11 97       	sbiw	r26, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <LCD_vInit+0xbe>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCD_vInit+0xc4>
 1d4:	00 00       	nop
	_delay_ms(1);
	#endif
}
 1d6:	08 95       	ret

000001d8 <LCD_vSend_char>:
		LCD_vEnable();
		_delay_ms(1);
	#endif
}
void LCD_vSend_char( char data)
{
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
		DIO_WRITE_PORT(PORT,data);
		DIO_WRITE('B',RS,1);//write to data register
		LCD_vEnable();
		_delay_ms(1);
	#elif defined four_bit_mode
		DIO_WRITE_LowNipple(PORT,data>>4);
 1dc:	68 2f       	mov	r22, r24
 1de:	62 95       	swap	r22
 1e0:	6f 70       	andi	r22, 0x0F	; 15
 1e2:	83 e6       	ldi	r24, 0x63	; 99
 1e4:	0e 94 22 04 	call	0x844	; 0x844 <DIO_WRITE_LowNipple>
		DIO_WRITE('B',RS,1);
 1e8:	82 e4       	ldi	r24, 0x42	; 66
 1ea:	61 e0       	ldi	r22, 0x01	; 1
 1ec:	41 e0       	ldi	r20, 0x01	; 1
 1ee:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
		LCD_vEnable();
 1f2:	0e 94 49 00 	call	0x92	; 0x92 <LCD_vEnable>
 1f6:	8f ec       	ldi	r24, 0xCF	; 207
 1f8:	97 e0       	ldi	r25, 0x07	; 7
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <LCD_vSend_char+0x22>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <LCD_vSend_char+0x28>
 200:	00 00       	nop
		_delay_ms(1);
		DIO_WRITE_LowNipple(PORT,data);
 202:	83 e6       	ldi	r24, 0x63	; 99
 204:	6c 2f       	mov	r22, r28
 206:	0e 94 22 04 	call	0x844	; 0x844 <DIO_WRITE_LowNipple>
		DIO_WRITE('B',RS,1);
 20a:	82 e4       	ldi	r24, 0x42	; 66
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	41 e0       	ldi	r20, 0x01	; 1
 210:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DIO_WRITE>
		LCD_vEnable();
 214:	0e 94 49 00 	call	0x92	; 0x92 <LCD_vEnable>
 218:	8f ec       	ldi	r24, 0xCF	; 207
 21a:	97 e0       	ldi	r25, 0x07	; 7
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	f1 f7       	brne	.-4      	; 0x21c <LCD_vSend_char+0x44>
 220:	00 c0       	rjmp	.+0      	; 0x222 <LCD_vSend_char+0x4a>
 222:	00 00       	nop
		_delay_ms(1);
	#endif
}
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <LCD_vSend_string>:

void LCD_vSend_string(char *data)
{	static unsigned char counter=0;
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	ec 01       	movw	r28, r24
	while((*data)!='\0')
 22e:	88 81       	ld	r24, Y
 230:	88 23       	and	r24, r24
 232:	31 f0       	breq	.+12     	; 0x240 <LCD_vSend_string+0x18>
		LCD_vEnable();
		_delay_ms(1);
	#endif
}

void LCD_vSend_string(char *data)
 234:	21 96       	adiw	r28, 0x01	; 1
{	static unsigned char counter=0;
	while((*data)!='\0')
	{
		LCD_vSend_char(*data);
 236:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
	#endif
}

void LCD_vSend_string(char *data)
{	static unsigned char counter=0;
	while((*data)!='\0')
 23a:	89 91       	ld	r24, Y+
 23c:	88 23       	and	r24, r24
 23e:	d9 f7       	brne	.-10     	; 0x236 <LCD_vSend_string+0xe>
		{
			LCD_vMove_Cursor(2,1);
			LCD_vSend_char(PORT);
		}*/
	}
}
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <LCD_vClear_Screen>:
void LCD_vClear_Screen()
{
	LCD_vSend_cmd(0x01);
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 24c:	8f e1       	ldi	r24, 0x1F	; 31
 24e:	9e e4       	ldi	r25, 0x4E	; 78
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <LCD_vClear_Screen+0xa>
 254:	00 c0       	rjmp	.+0      	; 0x256 <LCD_vClear_Screen+0x10>
 256:	00 00       	nop
	_delay_ms(10);
		
}
 258:	08 95       	ret

0000025a <LCD_vReturn_Home>:
void LCD_vReturn_Home()
{
	LCD_vSend_cmd(0x02);
 25a:	82 e0       	ldi	r24, 0x02	; 2
 25c:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 260:	8f e1       	ldi	r24, 0x1F	; 31
 262:	9e e4       	ldi	r25, 0x4E	; 78
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <LCD_vReturn_Home+0xa>
 268:	00 c0       	rjmp	.+0      	; 0x26a <LCD_vReturn_Home+0x10>
 26a:	00 00       	nop
	_delay_ms(10);
}
 26c:	08 95       	ret

0000026e <LCD_vMove_Cursor>:
void LCD_vMove_Cursor(unsigned char row,unsigned char column)
{
	if(1==row)
 26e:	81 30       	cpi	r24, 0x01	; 1
 270:	59 f4       	brne	.+22     	; 0x288 <LCD_vMove_Cursor+0x1a>
	{
		LCD_vSend_cmd((0x80+column-1));
 272:	86 2f       	mov	r24, r22
 274:	81 58       	subi	r24, 0x81	; 129
 276:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 27a:	8f e1       	ldi	r24, 0x1F	; 31
 27c:	9e e4       	ldi	r25, 0x4E	; 78
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <LCD_vMove_Cursor+0x10>
 282:	00 c0       	rjmp	.+0      	; 0x284 <LCD_vMove_Cursor+0x16>
 284:	00 00       	nop
 286:	08 95       	ret
		_delay_ms(10);
	}
	else if(2==row)
 288:	82 30       	cpi	r24, 0x02	; 2
 28a:	59 f4       	brne	.+22     	; 0x2a2 <LCD_vMove_Cursor+0x34>
	{
		LCD_vSend_cmd((0xc0+column-1));
 28c:	86 2f       	mov	r24, r22
 28e:	81 54       	subi	r24, 0x41	; 65
 290:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_vSend_cmd>
 294:	8f e1       	ldi	r24, 0x1F	; 31
 296:	9e e4       	ldi	r25, 0x4E	; 78
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <LCD_vMove_Cursor+0x2a>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <LCD_vMove_Cursor+0x30>
 29e:	00 00       	nop
 2a0:	08 95       	ret
		_delay_ms(10);
	}
	else
	{
		LCD_vReturn_Home();
 2a2:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_vReturn_Home>
 2a6:	8f e1       	ldi	r24, 0x1F	; 31
 2a8:	9e e4       	ldi	r25, 0x4E	; 78
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCD_vMove_Cursor+0x3c>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <LCD_vMove_Cursor+0x42>
 2b0:	00 00       	nop
 2b2:	08 95       	ret

000002b4 <ADC_vInt>:
#include "DIO_DRIVER.h"
#include "bitwise.h"
#include <avr/io.h>
void ADC_vInt(void)
{
	SET(ADMUX,REFS0);
 2b4:	3e 9a       	sbi	0x07, 6	; 7
	SET(ADMUX,REFS1);
 2b6:	3f 9a       	sbi	0x07, 7	; 7
	SET(ADMUX,MUX4);
 2b8:	3c 9a       	sbi	0x07, 4	; 7
	SET(ADCSRA,ADEN);//Enabels adc
 2ba:	37 9a       	sbi	0x06, 7	; 6
	SET(ADCSRA,ADPS2);
 2bc:	32 9a       	sbi	0x06, 2	; 6
	SET(ADCSRA,ADPS1);
 2be:	31 9a       	sbi	0x06, 1	; 6


}
 2c0:	08 95       	ret

000002c2 <ADC_u16Read>:

short ADC_u16Read()
{
	short return_val;
	SET(ADCSRA,ADSC);
 2c2:	36 9a       	sbi	0x06, 6	; 6
	while(READ(ADCSRA,ADSC)==1);
 2c4:	36 99       	sbic	0x06, 6	; 6
 2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <ADC_u16Read+0x2>
	return_val=ADCL;
 2c8:	84 b1       	in	r24, 0x04	; 4
 2ca:	90 e0       	ldi	r25, 0x00	; 0
	return_val|=(ADCH<<8);
 2cc:	45 b1       	in	r20, 0x05	; 5
 2ce:	34 2f       	mov	r19, r20
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	82 2b       	or	r24, r18
 2d4:	93 2b       	or	r25, r19
	return return_val;
}
 2d6:	08 95       	ret

000002d8 <DIO_SET_PIN_DIRECTION>:
#include<avr/io.h>
#include"bitwise.h"

void DIO_SET_PIN_DIRECTION(char port,char pin,char dir)
{
	switch(port)
 2d8:	84 34       	cpi	r24, 0x44	; 68
 2da:	09 f4       	brne	.+2      	; 0x2de <DIO_SET_PIN_DIRECTION+0x6>
 2dc:	71 c0       	rjmp	.+226    	; 0x3c0 <DIO_SET_PIN_DIRECTION+0xe8>
 2de:	85 34       	cpi	r24, 0x45	; 69
 2e0:	48 f4       	brcc	.+18     	; 0x2f4 <DIO_SET_PIN_DIRECTION+0x1c>
 2e2:	82 34       	cpi	r24, 0x42	; 66
 2e4:	99 f1       	breq	.+102    	; 0x34c <DIO_SET_PIN_DIRECTION+0x74>
 2e6:	83 34       	cpi	r24, 0x43	; 67
 2e8:	08 f0       	brcs	.+2      	; 0x2ec <DIO_SET_PIN_DIRECTION+0x14>
 2ea:	4d c0       	rjmp	.+154    	; 0x386 <DIO_SET_PIN_DIRECTION+0xae>
 2ec:	81 34       	cpi	r24, 0x41	; 65
 2ee:	09 f0       	breq	.+2      	; 0x2f2 <DIO_SET_PIN_DIRECTION+0x1a>
 2f0:	83 c0       	rjmp	.+262    	; 0x3f8 <DIO_SET_PIN_DIRECTION+0x120>
 2f2:	0f c0       	rjmp	.+30     	; 0x312 <DIO_SET_PIN_DIRECTION+0x3a>
 2f4:	82 36       	cpi	r24, 0x62	; 98
 2f6:	51 f1       	breq	.+84     	; 0x34c <DIO_SET_PIN_DIRECTION+0x74>
 2f8:	83 36       	cpi	r24, 0x63	; 99
 2fa:	20 f4       	brcc	.+8      	; 0x304 <DIO_SET_PIN_DIRECTION+0x2c>
 2fc:	81 36       	cpi	r24, 0x61	; 97
 2fe:	09 f0       	breq	.+2      	; 0x302 <DIO_SET_PIN_DIRECTION+0x2a>
 300:	7b c0       	rjmp	.+246    	; 0x3f8 <DIO_SET_PIN_DIRECTION+0x120>
 302:	07 c0       	rjmp	.+14     	; 0x312 <DIO_SET_PIN_DIRECTION+0x3a>
 304:	83 36       	cpi	r24, 0x63	; 99
 306:	09 f4       	brne	.+2      	; 0x30a <DIO_SET_PIN_DIRECTION+0x32>
 308:	3e c0       	rjmp	.+124    	; 0x386 <DIO_SET_PIN_DIRECTION+0xae>
 30a:	84 36       	cpi	r24, 0x64	; 100
 30c:	09 f0       	breq	.+2      	; 0x310 <DIO_SET_PIN_DIRECTION+0x38>
 30e:	74 c0       	rjmp	.+232    	; 0x3f8 <DIO_SET_PIN_DIRECTION+0x120>
 310:	57 c0       	rjmp	.+174    	; 0x3c0 <DIO_SET_PIN_DIRECTION+0xe8>
	{
		case 'A':
		case 'a': (dir==0)?(CLEAR(DDRA,pin)):(SET(DDRA,pin));
 312:	44 23       	and	r20, r20
 314:	71 f4       	brne	.+28     	; 0x332 <DIO_SET_PIN_DIRECTION+0x5a>
 316:	2a b3       	in	r18, 0x1a	; 26
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	ac 01       	movw	r20, r24
 31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_SET_PIN_DIRECTION+0x4c>
 320:	44 0f       	add	r20, r20
 322:	55 1f       	adc	r21, r21
 324:	6a 95       	dec	r22
 326:	e2 f7       	brpl	.-8      	; 0x320 <DIO_SET_PIN_DIRECTION+0x48>
 328:	ba 01       	movw	r22, r20
 32a:	60 95       	com	r22
 32c:	62 23       	and	r22, r18
 32e:	6a bb       	out	0x1a, r22	; 26
 330:	08 95       	ret
 332:	2a b3       	in	r18, 0x1a	; 26
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	ac 01       	movw	r20, r24
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_SET_PIN_DIRECTION+0x68>
 33c:	44 0f       	add	r20, r20
 33e:	55 1f       	adc	r21, r21
 340:	6a 95       	dec	r22
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_SET_PIN_DIRECTION+0x64>
 344:	ba 01       	movw	r22, r20
 346:	62 2b       	or	r22, r18
 348:	6a bb       	out	0x1a, r22	; 26
 34a:	08 95       	ret
		break;
		case 'B':
		case 'b': (dir==0)?(CLEAR(DDRB,pin)):(SET(DDRB,pin));
 34c:	44 23       	and	r20, r20
 34e:	71 f4       	brne	.+28     	; 0x36c <DIO_SET_PIN_DIRECTION+0x94>
 350:	27 b3       	in	r18, 0x17	; 23
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	ac 01       	movw	r20, r24
 358:	02 c0       	rjmp	.+4      	; 0x35e <DIO_SET_PIN_DIRECTION+0x86>
 35a:	44 0f       	add	r20, r20
 35c:	55 1f       	adc	r21, r21
 35e:	6a 95       	dec	r22
 360:	e2 f7       	brpl	.-8      	; 0x35a <DIO_SET_PIN_DIRECTION+0x82>
 362:	ba 01       	movw	r22, r20
 364:	60 95       	com	r22
 366:	62 23       	and	r22, r18
 368:	67 bb       	out	0x17, r22	; 23
 36a:	08 95       	ret
 36c:	27 b3       	in	r18, 0x17	; 23
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	ac 01       	movw	r20, r24
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_SET_PIN_DIRECTION+0xa2>
 376:	44 0f       	add	r20, r20
 378:	55 1f       	adc	r21, r21
 37a:	6a 95       	dec	r22
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_SET_PIN_DIRECTION+0x9e>
 37e:	ba 01       	movw	r22, r20
 380:	62 2b       	or	r22, r18
 382:	67 bb       	out	0x17, r22	; 23
 384:	08 95       	ret
		break;
		case 'C':
		case 'c': (dir==0)?(CLEAR(DDRC,pin)):(SET(DDRC,pin));
 386:	44 23       	and	r20, r20
 388:	71 f4       	brne	.+28     	; 0x3a6 <DIO_SET_PIN_DIRECTION+0xce>
 38a:	24 b3       	in	r18, 0x14	; 20
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	ac 01       	movw	r20, r24
 392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_SET_PIN_DIRECTION+0xc0>
 394:	44 0f       	add	r20, r20
 396:	55 1f       	adc	r21, r21
 398:	6a 95       	dec	r22
 39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_SET_PIN_DIRECTION+0xbc>
 39c:	ba 01       	movw	r22, r20
 39e:	60 95       	com	r22
 3a0:	62 23       	and	r22, r18
 3a2:	64 bb       	out	0x14, r22	; 20
 3a4:	08 95       	ret
 3a6:	24 b3       	in	r18, 0x14	; 20
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	ac 01       	movw	r20, r24
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_SET_PIN_DIRECTION+0xdc>
 3b0:	44 0f       	add	r20, r20
 3b2:	55 1f       	adc	r21, r21
 3b4:	6a 95       	dec	r22
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_SET_PIN_DIRECTION+0xd8>
 3b8:	ba 01       	movw	r22, r20
 3ba:	62 2b       	or	r22, r18
 3bc:	64 bb       	out	0x14, r22	; 20
 3be:	08 95       	ret
		break;
		case 'D':
		case 'd': (dir==0)?(CLEAR(DDRD,pin)):(SET(DDRD,pin));
 3c0:	44 23       	and	r20, r20
 3c2:	71 f4       	brne	.+28     	; 0x3e0 <DIO_SET_PIN_DIRECTION+0x108>
 3c4:	21 b3       	in	r18, 0x11	; 17
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	ac 01       	movw	r20, r24
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <DIO_SET_PIN_DIRECTION+0xfa>
 3ce:	44 0f       	add	r20, r20
 3d0:	55 1f       	adc	r21, r21
 3d2:	6a 95       	dec	r22
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <DIO_SET_PIN_DIRECTION+0xf6>
 3d6:	ba 01       	movw	r22, r20
 3d8:	60 95       	com	r22
 3da:	62 23       	and	r22, r18
 3dc:	61 bb       	out	0x11, r22	; 17
 3de:	08 95       	ret
 3e0:	21 b3       	in	r18, 0x11	; 17
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	ac 01       	movw	r20, r24
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <DIO_SET_PIN_DIRECTION+0x116>
 3ea:	44 0f       	add	r20, r20
 3ec:	55 1f       	adc	r21, r21
 3ee:	6a 95       	dec	r22
 3f0:	e2 f7       	brpl	.-8      	; 0x3ea <DIO_SET_PIN_DIRECTION+0x112>
 3f2:	ba 01       	movw	r22, r20
 3f4:	62 2b       	or	r22, r18
 3f6:	61 bb       	out	0x11, r22	; 17
 3f8:	08 95       	ret

000003fa <DIO_WRITE>:
		break;
	}
}
void DIO_WRITE(char port,char pin,char val)
	{
		switch(port)
 3fa:	84 34       	cpi	r24, 0x44	; 68
 3fc:	09 f4       	brne	.+2      	; 0x400 <DIO_WRITE+0x6>
 3fe:	71 c0       	rjmp	.+226    	; 0x4e2 <DIO_WRITE+0xe8>
 400:	85 34       	cpi	r24, 0x45	; 69
 402:	48 f4       	brcc	.+18     	; 0x416 <DIO_WRITE+0x1c>
 404:	82 34       	cpi	r24, 0x42	; 66
 406:	99 f1       	breq	.+102    	; 0x46e <DIO_WRITE+0x74>
 408:	83 34       	cpi	r24, 0x43	; 67
 40a:	08 f0       	brcs	.+2      	; 0x40e <DIO_WRITE+0x14>
 40c:	4d c0       	rjmp	.+154    	; 0x4a8 <DIO_WRITE+0xae>
 40e:	81 34       	cpi	r24, 0x41	; 65
 410:	09 f0       	breq	.+2      	; 0x414 <DIO_WRITE+0x1a>
 412:	83 c0       	rjmp	.+262    	; 0x51a <DIO_WRITE+0x120>
 414:	0f c0       	rjmp	.+30     	; 0x434 <DIO_WRITE+0x3a>
 416:	82 36       	cpi	r24, 0x62	; 98
 418:	51 f1       	breq	.+84     	; 0x46e <DIO_WRITE+0x74>
 41a:	83 36       	cpi	r24, 0x63	; 99
 41c:	20 f4       	brcc	.+8      	; 0x426 <DIO_WRITE+0x2c>
 41e:	81 36       	cpi	r24, 0x61	; 97
 420:	09 f0       	breq	.+2      	; 0x424 <DIO_WRITE+0x2a>
 422:	7b c0       	rjmp	.+246    	; 0x51a <DIO_WRITE+0x120>
 424:	07 c0       	rjmp	.+14     	; 0x434 <DIO_WRITE+0x3a>
 426:	83 36       	cpi	r24, 0x63	; 99
 428:	09 f4       	brne	.+2      	; 0x42c <DIO_WRITE+0x32>
 42a:	3e c0       	rjmp	.+124    	; 0x4a8 <DIO_WRITE+0xae>
 42c:	84 36       	cpi	r24, 0x64	; 100
 42e:	09 f0       	breq	.+2      	; 0x432 <DIO_WRITE+0x38>
 430:	74 c0       	rjmp	.+232    	; 0x51a <DIO_WRITE+0x120>
 432:	57 c0       	rjmp	.+174    	; 0x4e2 <DIO_WRITE+0xe8>
		{
			case 'a': 
			case'A':(val==1)?(SET(PORTA,pin)):(CLEAR(PORTA,pin));
 434:	41 30       	cpi	r20, 0x01	; 1
 436:	69 f4       	brne	.+26     	; 0x452 <DIO_WRITE+0x58>
 438:	2b b3       	in	r18, 0x1b	; 27
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	ac 01       	movw	r20, r24
 440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_WRITE+0x4c>
 442:	44 0f       	add	r20, r20
 444:	55 1f       	adc	r21, r21
 446:	6a 95       	dec	r22
 448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_WRITE+0x48>
 44a:	ba 01       	movw	r22, r20
 44c:	62 2b       	or	r22, r18
 44e:	6b bb       	out	0x1b, r22	; 27
 450:	08 95       	ret
 452:	2b b3       	in	r18, 0x1b	; 27
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	ac 01       	movw	r20, r24
 45a:	02 c0       	rjmp	.+4      	; 0x460 <DIO_WRITE+0x66>
 45c:	44 0f       	add	r20, r20
 45e:	55 1f       	adc	r21, r21
 460:	6a 95       	dec	r22
 462:	e2 f7       	brpl	.-8      	; 0x45c <DIO_WRITE+0x62>
 464:	ba 01       	movw	r22, r20
 466:	60 95       	com	r22
 468:	62 23       	and	r22, r18
 46a:	6b bb       	out	0x1b, r22	; 27
 46c:	08 95       	ret
			break;
			case 'b':
			case'B':(val==1)?(SET(PORTB,pin)):(CLEAR(PORTB,pin));
 46e:	41 30       	cpi	r20, 0x01	; 1
 470:	69 f4       	brne	.+26     	; 0x48c <DIO_WRITE+0x92>
 472:	28 b3       	in	r18, 0x18	; 24
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	ac 01       	movw	r20, r24
 47a:	02 c0       	rjmp	.+4      	; 0x480 <DIO_WRITE+0x86>
 47c:	44 0f       	add	r20, r20
 47e:	55 1f       	adc	r21, r21
 480:	6a 95       	dec	r22
 482:	e2 f7       	brpl	.-8      	; 0x47c <DIO_WRITE+0x82>
 484:	ba 01       	movw	r22, r20
 486:	62 2b       	or	r22, r18
 488:	68 bb       	out	0x18, r22	; 24
 48a:	08 95       	ret
 48c:	28 b3       	in	r18, 0x18	; 24
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	ac 01       	movw	r20, r24
 494:	02 c0       	rjmp	.+4      	; 0x49a <DIO_WRITE+0xa0>
 496:	44 0f       	add	r20, r20
 498:	55 1f       	adc	r21, r21
 49a:	6a 95       	dec	r22
 49c:	e2 f7       	brpl	.-8      	; 0x496 <DIO_WRITE+0x9c>
 49e:	ba 01       	movw	r22, r20
 4a0:	60 95       	com	r22
 4a2:	62 23       	and	r22, r18
 4a4:	68 bb       	out	0x18, r22	; 24
 4a6:	08 95       	ret
			break;
			case 'c':
			case'C':(val==1)?(SET(PORTC,pin)):(CLEAR(PORTC,pin));
 4a8:	41 30       	cpi	r20, 0x01	; 1
 4aa:	69 f4       	brne	.+26     	; 0x4c6 <DIO_WRITE+0xcc>
 4ac:	25 b3       	in	r18, 0x15	; 21
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	ac 01       	movw	r20, r24
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <DIO_WRITE+0xc0>
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	6a 95       	dec	r22
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <DIO_WRITE+0xbc>
 4be:	ba 01       	movw	r22, r20
 4c0:	62 2b       	or	r22, r18
 4c2:	65 bb       	out	0x15, r22	; 21
 4c4:	08 95       	ret
 4c6:	25 b3       	in	r18, 0x15	; 21
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	ac 01       	movw	r20, r24
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_WRITE+0xda>
 4d0:	44 0f       	add	r20, r20
 4d2:	55 1f       	adc	r21, r21
 4d4:	6a 95       	dec	r22
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_WRITE+0xd6>
 4d8:	ba 01       	movw	r22, r20
 4da:	60 95       	com	r22
 4dc:	62 23       	and	r22, r18
 4de:	65 bb       	out	0x15, r22	; 21
 4e0:	08 95       	ret
			break;
			case 'd':
			case'D':(val==1)?(SET(PORTD,pin)):(CLEAR(PORTD,pin));
 4e2:	41 30       	cpi	r20, 0x01	; 1
 4e4:	69 f4       	brne	.+26     	; 0x500 <DIO_WRITE+0x106>
 4e6:	22 b3       	in	r18, 0x12	; 18
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	ac 01       	movw	r20, r24
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <DIO_WRITE+0xfa>
 4f0:	44 0f       	add	r20, r20
 4f2:	55 1f       	adc	r21, r21
 4f4:	6a 95       	dec	r22
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <DIO_WRITE+0xf6>
 4f8:	ba 01       	movw	r22, r20
 4fa:	62 2b       	or	r22, r18
 4fc:	62 bb       	out	0x12, r22	; 18
 4fe:	08 95       	ret
 500:	22 b3       	in	r18, 0x12	; 18
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	ac 01       	movw	r20, r24
 508:	02 c0       	rjmp	.+4      	; 0x50e <DIO_WRITE+0x114>
 50a:	44 0f       	add	r20, r20
 50c:	55 1f       	adc	r21, r21
 50e:	6a 95       	dec	r22
 510:	e2 f7       	brpl	.-8      	; 0x50a <DIO_WRITE+0x110>
 512:	ba 01       	movw	r22, r20
 514:	60 95       	com	r22
 516:	62 23       	and	r22, r18
 518:	62 bb       	out	0x12, r22	; 18
 51a:	08 95       	ret

0000051c <DIO_TOGGLE>:
			break;
		}		
	}
void DIO_TOGGLE(char port,char pin)
	{
		switch(port)
 51c:	83 34       	cpi	r24, 0x43	; 67
 51e:	39 f1       	breq	.+78     	; 0x56e <DIO_TOGGLE+0x52>
 520:	84 34       	cpi	r24, 0x44	; 68
 522:	28 f4       	brcc	.+10     	; 0x52e <DIO_TOGGLE+0x12>
 524:	81 34       	cpi	r24, 0x41	; 65
 526:	49 f0       	breq	.+18     	; 0x53a <DIO_TOGGLE+0x1e>
 528:	82 34       	cpi	r24, 0x42	; 66
 52a:	69 f5       	brne	.+90     	; 0x586 <DIO_TOGGLE+0x6a>
 52c:	13 c0       	rjmp	.+38     	; 0x554 <DIO_TOGGLE+0x38>
 52e:	82 36       	cpi	r24, 0x62	; 98
 530:	89 f0       	breq	.+34     	; 0x554 <DIO_TOGGLE+0x38>
 532:	83 36       	cpi	r24, 0x63	; 99
 534:	e1 f0       	breq	.+56     	; 0x56e <DIO_TOGGLE+0x52>
 536:	81 36       	cpi	r24, 0x61	; 97
 538:	31 f5       	brne	.+76     	; 0x586 <DIO_TOGGLE+0x6a>
		{
			case'a':
			case'A':(TOGGLE(PORTA,pin));
 53a:	2b b3       	in	r18, 0x1b	; 27
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	ac 01       	movw	r20, r24
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_TOGGLE+0x2c>
 544:	44 0f       	add	r20, r20
 546:	55 1f       	adc	r21, r21
 548:	6a 95       	dec	r22
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_TOGGLE+0x28>
 54c:	ba 01       	movw	r22, r20
 54e:	62 27       	eor	r22, r18
 550:	6b bb       	out	0x1b, r22	; 27
			break;
 552:	08 95       	ret
			case'b':
			case'B':(TOGGLE(PORTB,pin));
 554:	28 b3       	in	r18, 0x18	; 24
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	ac 01       	movw	r20, r24
 55c:	02 c0       	rjmp	.+4      	; 0x562 <DIO_TOGGLE+0x46>
 55e:	44 0f       	add	r20, r20
 560:	55 1f       	adc	r21, r21
 562:	6a 95       	dec	r22
 564:	e2 f7       	brpl	.-8      	; 0x55e <DIO_TOGGLE+0x42>
 566:	ba 01       	movw	r22, r20
 568:	62 27       	eor	r22, r18
 56a:	68 bb       	out	0x18, r22	; 24
			break;
 56c:	08 95       	ret
			case'C':
			case'c':(TOGGLE(PORTC,pin));
 56e:	25 b3       	in	r18, 0x15	; 21
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	ac 01       	movw	r20, r24
 576:	02 c0       	rjmp	.+4      	; 0x57c <DIO_TOGGLE+0x60>
 578:	44 0f       	add	r20, r20
 57a:	55 1f       	adc	r21, r21
 57c:	6a 95       	dec	r22
 57e:	e2 f7       	brpl	.-8      	; 0x578 <DIO_TOGGLE+0x5c>
 580:	ba 01       	movw	r22, r20
 582:	62 27       	eor	r22, r18
 584:	65 bb       	out	0x15, r22	; 21
 586:	08 95       	ret

00000588 <DIO_READ>:
	}

char DIO_READ(char port,char pin)
	{
		char return_value;
		switch(port)
 588:	84 34       	cpi	r24, 0x44	; 68
 58a:	09 f4       	brne	.+2      	; 0x58e <DIO_READ+0x6>
 58c:	51 c0       	rjmp	.+162    	; 0x630 <DIO_READ+0xa8>
 58e:	85 34       	cpi	r24, 0x45	; 69
 590:	40 f4       	brcc	.+16     	; 0x5a2 <DIO_READ+0x1a>
 592:	82 34       	cpi	r24, 0x42	; 66
 594:	39 f1       	breq	.+78     	; 0x5e4 <DIO_READ+0x5c>
 596:	83 34       	cpi	r24, 0x43	; 67
 598:	c0 f5       	brcc	.+112    	; 0x60a <DIO_READ+0x82>
 59a:	81 34       	cpi	r24, 0x41	; 65
 59c:	09 f0       	breq	.+2      	; 0x5a0 <DIO_READ+0x18>
 59e:	5a c0       	rjmp	.+180    	; 0x654 <DIO_READ+0xcc>
 5a0:	0e c0       	rjmp	.+28     	; 0x5be <DIO_READ+0x36>
 5a2:	82 36       	cpi	r24, 0x62	; 98
 5a4:	f9 f0       	breq	.+62     	; 0x5e4 <DIO_READ+0x5c>
 5a6:	83 36       	cpi	r24, 0x63	; 99
 5a8:	20 f4       	brcc	.+8      	; 0x5b2 <DIO_READ+0x2a>
 5aa:	81 36       	cpi	r24, 0x61	; 97
 5ac:	09 f0       	breq	.+2      	; 0x5b0 <DIO_READ+0x28>
 5ae:	52 c0       	rjmp	.+164    	; 0x654 <DIO_READ+0xcc>
 5b0:	06 c0       	rjmp	.+12     	; 0x5be <DIO_READ+0x36>
 5b2:	83 36       	cpi	r24, 0x63	; 99
 5b4:	51 f1       	breq	.+84     	; 0x60a <DIO_READ+0x82>
 5b6:	84 36       	cpi	r24, 0x64	; 100
 5b8:	09 f0       	breq	.+2      	; 0x5bc <DIO_READ+0x34>
 5ba:	4c c0       	rjmp	.+152    	; 0x654 <DIO_READ+0xcc>
 5bc:	39 c0       	rjmp	.+114    	; 0x630 <DIO_READ+0xa8>
		{
			case'a':
			case'A':return_value=READ(PINA,pin);
 5be:	29 b3       	in	r18, 0x19	; 25
 5c0:	81 e0       	ldi	r24, 0x01	; 1
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	06 2e       	mov	r0, r22
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <DIO_READ+0x44>
 5c8:	88 0f       	add	r24, r24
 5ca:	99 1f       	adc	r25, r25
 5cc:	0a 94       	dec	r0
 5ce:	e2 f7       	brpl	.-8      	; 0x5c8 <DIO_READ+0x40>
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	82 23       	and	r24, r18
 5d4:	93 23       	and	r25, r19
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <DIO_READ+0x54>
 5d8:	95 95       	asr	r25
 5da:	87 95       	ror	r24
 5dc:	6a 95       	dec	r22
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <DIO_READ+0x50>
 5e0:	98 2f       	mov	r25, r24
			break;
 5e2:	38 c0       	rjmp	.+112    	; 0x654 <DIO_READ+0xcc>
			case'b':
			case'B':return_value=READ(PINB,pin);
 5e4:	26 b3       	in	r18, 0x16	; 22
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	06 2e       	mov	r0, r22
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <DIO_READ+0x6a>
 5ee:	88 0f       	add	r24, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	0a 94       	dec	r0
 5f4:	e2 f7       	brpl	.-8      	; 0x5ee <DIO_READ+0x66>
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	82 23       	and	r24, r18
 5fa:	93 23       	and	r25, r19
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <DIO_READ+0x7a>
 5fe:	95 95       	asr	r25
 600:	87 95       	ror	r24
 602:	6a 95       	dec	r22
 604:	e2 f7       	brpl	.-8      	; 0x5fe <DIO_READ+0x76>
 606:	98 2f       	mov	r25, r24
			break;
 608:	25 c0       	rjmp	.+74     	; 0x654 <DIO_READ+0xcc>
			case'c':
			case'C':return_value=READ(PINC,pin);
 60a:	23 b3       	in	r18, 0x13	; 19
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	06 2e       	mov	r0, r22
 612:	02 c0       	rjmp	.+4      	; 0x618 <DIO_READ+0x90>
 614:	88 0f       	add	r24, r24
 616:	99 1f       	adc	r25, r25
 618:	0a 94       	dec	r0
 61a:	e2 f7       	brpl	.-8      	; 0x614 <DIO_READ+0x8c>
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	82 23       	and	r24, r18
 620:	93 23       	and	r25, r19
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_READ+0xa0>
 624:	95 95       	asr	r25
 626:	87 95       	ror	r24
 628:	6a 95       	dec	r22
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_READ+0x9c>
 62c:	98 2f       	mov	r25, r24
			break;
 62e:	12 c0       	rjmp	.+36     	; 0x654 <DIO_READ+0xcc>
			case'd':
			case'D':return_value=READ(PIND,pin);
 630:	20 b3       	in	r18, 0x10	; 16
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	06 2e       	mov	r0, r22
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_READ+0xb6>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	0a 94       	dec	r0
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_READ+0xb2>
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	82 23       	and	r24, r18
 646:	93 23       	and	r25, r19
 648:	02 c0       	rjmp	.+4      	; 0x64e <DIO_READ+0xc6>
 64a:	95 95       	asr	r25
 64c:	87 95       	ror	r24
 64e:	6a 95       	dec	r22
 650:	e2 f7       	brpl	.-8      	; 0x64a <DIO_READ+0xc2>
 652:	98 2f       	mov	r25, r24
			break;
		}
		return return_value;
	}
 654:	89 2f       	mov	r24, r25
 656:	08 95       	ret

00000658 <DIO_SET_PORT_DIRECTION>:
void DIO_SET_PORT_DIRECTION(char port,char val)
	{
		switch(port)
 658:	84 34       	cpi	r24, 0x44	; 68
 65a:	d9 f0       	breq	.+54     	; 0x692 <DIO_SET_PORT_DIRECTION+0x3a>
 65c:	85 34       	cpi	r24, 0x45	; 69
 65e:	38 f4       	brcc	.+14     	; 0x66e <DIO_SET_PORT_DIRECTION+0x16>
 660:	82 34       	cpi	r24, 0x42	; 66
 662:	99 f0       	breq	.+38     	; 0x68a <DIO_SET_PORT_DIRECTION+0x32>
 664:	83 34       	cpi	r24, 0x43	; 67
 666:	98 f4       	brcc	.+38     	; 0x68e <DIO_SET_PORT_DIRECTION+0x36>
 668:	81 34       	cpi	r24, 0x41	; 65
 66a:	a1 f4       	brne	.+40     	; 0x694 <DIO_SET_PORT_DIRECTION+0x3c>
 66c:	0c c0       	rjmp	.+24     	; 0x686 <DIO_SET_PORT_DIRECTION+0x2e>
 66e:	82 36       	cpi	r24, 0x62	; 98
 670:	61 f0       	breq	.+24     	; 0x68a <DIO_SET_PORT_DIRECTION+0x32>
 672:	83 36       	cpi	r24, 0x63	; 99
 674:	18 f4       	brcc	.+6      	; 0x67c <DIO_SET_PORT_DIRECTION+0x24>
 676:	81 36       	cpi	r24, 0x61	; 97
 678:	69 f4       	brne	.+26     	; 0x694 <DIO_SET_PORT_DIRECTION+0x3c>
 67a:	05 c0       	rjmp	.+10     	; 0x686 <DIO_SET_PORT_DIRECTION+0x2e>
 67c:	83 36       	cpi	r24, 0x63	; 99
 67e:	39 f0       	breq	.+14     	; 0x68e <DIO_SET_PORT_DIRECTION+0x36>
 680:	84 36       	cpi	r24, 0x64	; 100
 682:	41 f4       	brne	.+16     	; 0x694 <DIO_SET_PORT_DIRECTION+0x3c>
 684:	06 c0       	rjmp	.+12     	; 0x692 <DIO_SET_PORT_DIRECTION+0x3a>
		{
			case'a':
			case'A':DDRA=val;
 686:	6a bb       	out	0x1a, r22	; 26
			break;
 688:	08 95       	ret
			case'b':
			case'B':DDRB=val;
 68a:	67 bb       	out	0x17, r22	; 23
			break;
 68c:	08 95       	ret
			case'C':
			case'c':DDRC=val;
 68e:	64 bb       	out	0x14, r22	; 20
			break;
 690:	08 95       	ret
			case'D':
			case'd':(DDRD=val);
 692:	61 bb       	out	0x11, r22	; 17
 694:	08 95       	ret

00000696 <DIO_WRITE_PORT>:
			break;
		}
	}
void DIO_WRITE_PORT(char port,char val)
	{
		switch(port)
 696:	84 34       	cpi	r24, 0x44	; 68
 698:	d9 f0       	breq	.+54     	; 0x6d0 <DIO_WRITE_PORT+0x3a>
 69a:	85 34       	cpi	r24, 0x45	; 69
 69c:	38 f4       	brcc	.+14     	; 0x6ac <DIO_WRITE_PORT+0x16>
 69e:	82 34       	cpi	r24, 0x42	; 66
 6a0:	99 f0       	breq	.+38     	; 0x6c8 <DIO_WRITE_PORT+0x32>
 6a2:	83 34       	cpi	r24, 0x43	; 67
 6a4:	98 f4       	brcc	.+38     	; 0x6cc <DIO_WRITE_PORT+0x36>
 6a6:	81 34       	cpi	r24, 0x41	; 65
 6a8:	a1 f4       	brne	.+40     	; 0x6d2 <DIO_WRITE_PORT+0x3c>
 6aa:	0c c0       	rjmp	.+24     	; 0x6c4 <DIO_WRITE_PORT+0x2e>
 6ac:	82 36       	cpi	r24, 0x62	; 98
 6ae:	61 f0       	breq	.+24     	; 0x6c8 <DIO_WRITE_PORT+0x32>
 6b0:	83 36       	cpi	r24, 0x63	; 99
 6b2:	18 f4       	brcc	.+6      	; 0x6ba <DIO_WRITE_PORT+0x24>
 6b4:	81 36       	cpi	r24, 0x61	; 97
 6b6:	69 f4       	brne	.+26     	; 0x6d2 <DIO_WRITE_PORT+0x3c>
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <DIO_WRITE_PORT+0x2e>
 6ba:	83 36       	cpi	r24, 0x63	; 99
 6bc:	39 f0       	breq	.+14     	; 0x6cc <DIO_WRITE_PORT+0x36>
 6be:	84 36       	cpi	r24, 0x64	; 100
 6c0:	41 f4       	brne	.+16     	; 0x6d2 <DIO_WRITE_PORT+0x3c>
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <DIO_WRITE_PORT+0x3a>
		{
			case'a':
			case'A':PORTA=val;
 6c4:	6b bb       	out	0x1b, r22	; 27
			break;
 6c6:	08 95       	ret
			case'b':
			case'B':PORTB=val;
 6c8:	68 bb       	out	0x18, r22	; 24
			break;
 6ca:	08 95       	ret
			case'c':
			case'C':PORTC=val;
 6cc:	65 bb       	out	0x15, r22	; 21
			break;
 6ce:	08 95       	ret
			case'd':
			case'D':PORTD=val;
 6d0:	62 bb       	out	0x12, r22	; 18
 6d2:	08 95       	ret

000006d4 <DIO_TOGGLE_PORT>:
			break;
		}
	}
void DIO_TOGGLE_PORT(char port)
	{
		switch(port)
 6d4:	84 34       	cpi	r24, 0x44	; 68
 6d6:	09 f1       	breq	.+66     	; 0x71a <DIO_TOGGLE_PORT+0x46>
 6d8:	85 34       	cpi	r24, 0x45	; 69
 6da:	38 f4       	brcc	.+14     	; 0x6ea <DIO_TOGGLE_PORT+0x16>
 6dc:	82 34       	cpi	r24, 0x42	; 66
 6de:	a9 f0       	breq	.+42     	; 0x70a <DIO_TOGGLE_PORT+0x36>
 6e0:	83 34       	cpi	r24, 0x43	; 67
 6e2:	b8 f4       	brcc	.+46     	; 0x712 <DIO_TOGGLE_PORT+0x3e>
 6e4:	81 34       	cpi	r24, 0x41	; 65
 6e6:	e1 f4       	brne	.+56     	; 0x720 <DIO_TOGGLE_PORT+0x4c>
 6e8:	0c c0       	rjmp	.+24     	; 0x702 <DIO_TOGGLE_PORT+0x2e>
 6ea:	82 36       	cpi	r24, 0x62	; 98
 6ec:	71 f0       	breq	.+28     	; 0x70a <DIO_TOGGLE_PORT+0x36>
 6ee:	83 36       	cpi	r24, 0x63	; 99
 6f0:	18 f4       	brcc	.+6      	; 0x6f8 <DIO_TOGGLE_PORT+0x24>
 6f2:	81 36       	cpi	r24, 0x61	; 97
 6f4:	a9 f4       	brne	.+42     	; 0x720 <DIO_TOGGLE_PORT+0x4c>
 6f6:	05 c0       	rjmp	.+10     	; 0x702 <DIO_TOGGLE_PORT+0x2e>
 6f8:	83 36       	cpi	r24, 0x63	; 99
 6fa:	59 f0       	breq	.+22     	; 0x712 <DIO_TOGGLE_PORT+0x3e>
 6fc:	84 36       	cpi	r24, 0x64	; 100
 6fe:	81 f4       	brne	.+32     	; 0x720 <DIO_TOGGLE_PORT+0x4c>
 700:	0c c0       	rjmp	.+24     	; 0x71a <DIO_TOGGLE_PORT+0x46>
		{
			case'a':
			case'A':PORTA^=0xff;
 702:	8b b3       	in	r24, 0x1b	; 27
 704:	80 95       	com	r24
 706:	8b bb       	out	0x1b, r24	; 27
			break;
 708:	08 95       	ret
			case'b':
			case'B':PORTB^=0xff;
 70a:	88 b3       	in	r24, 0x18	; 24
 70c:	80 95       	com	r24
 70e:	88 bb       	out	0x18, r24	; 24
			break;
 710:	08 95       	ret
			case'c':
			case'C':PORTC^=0xff;
 712:	85 b3       	in	r24, 0x15	; 21
 714:	80 95       	com	r24
 716:	85 bb       	out	0x15, r24	; 21
			break;
 718:	08 95       	ret
			case'd':
			case'D':PORTD^=0xff;
 71a:	82 b3       	in	r24, 0x12	; 18
 71c:	80 95       	com	r24
 71e:	82 bb       	out	0x12, r24	; 18
 720:	08 95       	ret

00000722 <DIO_vConnectPullUp>:
			break;
		}
	}	
void DIO_vConnectPullUp(char port,char pin,char connect)
{
	switch(port)
 722:	84 34       	cpi	r24, 0x44	; 68
 724:	09 f4       	brne	.+2      	; 0x728 <DIO_vConnectPullUp+0x6>
 726:	71 c0       	rjmp	.+226    	; 0x80a <DIO_vConnectPullUp+0xe8>
 728:	85 34       	cpi	r24, 0x45	; 69
 72a:	48 f4       	brcc	.+18     	; 0x73e <DIO_vConnectPullUp+0x1c>
 72c:	82 34       	cpi	r24, 0x42	; 66
 72e:	99 f1       	breq	.+102    	; 0x796 <DIO_vConnectPullUp+0x74>
 730:	83 34       	cpi	r24, 0x43	; 67
 732:	08 f0       	brcs	.+2      	; 0x736 <DIO_vConnectPullUp+0x14>
 734:	4d c0       	rjmp	.+154    	; 0x7d0 <DIO_vConnectPullUp+0xae>
 736:	81 34       	cpi	r24, 0x41	; 65
 738:	09 f0       	breq	.+2      	; 0x73c <DIO_vConnectPullUp+0x1a>
 73a:	83 c0       	rjmp	.+262    	; 0x842 <DIO_vConnectPullUp+0x120>
 73c:	0f c0       	rjmp	.+30     	; 0x75c <DIO_vConnectPullUp+0x3a>
 73e:	82 36       	cpi	r24, 0x62	; 98
 740:	51 f1       	breq	.+84     	; 0x796 <DIO_vConnectPullUp+0x74>
 742:	83 36       	cpi	r24, 0x63	; 99
 744:	20 f4       	brcc	.+8      	; 0x74e <DIO_vConnectPullUp+0x2c>
 746:	81 36       	cpi	r24, 0x61	; 97
 748:	09 f0       	breq	.+2      	; 0x74c <DIO_vConnectPullUp+0x2a>
 74a:	7b c0       	rjmp	.+246    	; 0x842 <DIO_vConnectPullUp+0x120>
 74c:	07 c0       	rjmp	.+14     	; 0x75c <DIO_vConnectPullUp+0x3a>
 74e:	83 36       	cpi	r24, 0x63	; 99
 750:	09 f4       	brne	.+2      	; 0x754 <DIO_vConnectPullUp+0x32>
 752:	3e c0       	rjmp	.+124    	; 0x7d0 <DIO_vConnectPullUp+0xae>
 754:	84 36       	cpi	r24, 0x64	; 100
 756:	09 f0       	breq	.+2      	; 0x75a <DIO_vConnectPullUp+0x38>
 758:	74 c0       	rjmp	.+232    	; 0x842 <DIO_vConnectPullUp+0x120>
 75a:	57 c0       	rjmp	.+174    	; 0x80a <DIO_vConnectPullUp+0xe8>
	{
		case'a':
		case'A':(connect==1)? (SET(PORTA,pin)):(CLEAR(PORTA,pin));
 75c:	41 30       	cpi	r20, 0x01	; 1
 75e:	69 f4       	brne	.+26     	; 0x77a <DIO_vConnectPullUp+0x58>
 760:	2b b3       	in	r18, 0x1b	; 27
 762:	81 e0       	ldi	r24, 0x01	; 1
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	ac 01       	movw	r20, r24
 768:	02 c0       	rjmp	.+4      	; 0x76e <DIO_vConnectPullUp+0x4c>
 76a:	44 0f       	add	r20, r20
 76c:	55 1f       	adc	r21, r21
 76e:	6a 95       	dec	r22
 770:	e2 f7       	brpl	.-8      	; 0x76a <DIO_vConnectPullUp+0x48>
 772:	ba 01       	movw	r22, r20
 774:	62 2b       	or	r22, r18
 776:	6b bb       	out	0x1b, r22	; 27
 778:	08 95       	ret
 77a:	2b b3       	in	r18, 0x1b	; 27
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	ac 01       	movw	r20, r24
 782:	02 c0       	rjmp	.+4      	; 0x788 <DIO_vConnectPullUp+0x66>
 784:	44 0f       	add	r20, r20
 786:	55 1f       	adc	r21, r21
 788:	6a 95       	dec	r22
 78a:	e2 f7       	brpl	.-8      	; 0x784 <DIO_vConnectPullUp+0x62>
 78c:	ba 01       	movw	r22, r20
 78e:	60 95       	com	r22
 790:	62 23       	and	r22, r18
 792:	6b bb       	out	0x1b, r22	; 27
 794:	08 95       	ret
		break;
		case'b':
		case'B':(connect==1)? (SET(PORTB,pin)):(CLEAR(PORTB,pin));
 796:	41 30       	cpi	r20, 0x01	; 1
 798:	69 f4       	brne	.+26     	; 0x7b4 <DIO_vConnectPullUp+0x92>
 79a:	28 b3       	in	r18, 0x18	; 24
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	ac 01       	movw	r20, r24
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <DIO_vConnectPullUp+0x86>
 7a4:	44 0f       	add	r20, r20
 7a6:	55 1f       	adc	r21, r21
 7a8:	6a 95       	dec	r22
 7aa:	e2 f7       	brpl	.-8      	; 0x7a4 <DIO_vConnectPullUp+0x82>
 7ac:	ba 01       	movw	r22, r20
 7ae:	62 2b       	or	r22, r18
 7b0:	68 bb       	out	0x18, r22	; 24
 7b2:	08 95       	ret
 7b4:	28 b3       	in	r18, 0x18	; 24
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	ac 01       	movw	r20, r24
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <DIO_vConnectPullUp+0xa0>
 7be:	44 0f       	add	r20, r20
 7c0:	55 1f       	adc	r21, r21
 7c2:	6a 95       	dec	r22
 7c4:	e2 f7       	brpl	.-8      	; 0x7be <DIO_vConnectPullUp+0x9c>
 7c6:	ba 01       	movw	r22, r20
 7c8:	60 95       	com	r22
 7ca:	62 23       	and	r22, r18
 7cc:	68 bb       	out	0x18, r22	; 24
 7ce:	08 95       	ret
		break;
		case'C':
		case'c':(connect==1)? (SET(PORTC,pin)):(CLEAR(PORTC,pin));
 7d0:	41 30       	cpi	r20, 0x01	; 1
 7d2:	69 f4       	brne	.+26     	; 0x7ee <DIO_vConnectPullUp+0xcc>
 7d4:	25 b3       	in	r18, 0x15	; 21
 7d6:	81 e0       	ldi	r24, 0x01	; 1
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	ac 01       	movw	r20, r24
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <DIO_vConnectPullUp+0xc0>
 7de:	44 0f       	add	r20, r20
 7e0:	55 1f       	adc	r21, r21
 7e2:	6a 95       	dec	r22
 7e4:	e2 f7       	brpl	.-8      	; 0x7de <DIO_vConnectPullUp+0xbc>
 7e6:	ba 01       	movw	r22, r20
 7e8:	62 2b       	or	r22, r18
 7ea:	65 bb       	out	0x15, r22	; 21
 7ec:	08 95       	ret
 7ee:	25 b3       	in	r18, 0x15	; 21
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	ac 01       	movw	r20, r24
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <DIO_vConnectPullUp+0xda>
 7f8:	44 0f       	add	r20, r20
 7fa:	55 1f       	adc	r21, r21
 7fc:	6a 95       	dec	r22
 7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <DIO_vConnectPullUp+0xd6>
 800:	ba 01       	movw	r22, r20
 802:	60 95       	com	r22
 804:	62 23       	and	r22, r18
 806:	65 bb       	out	0x15, r22	; 21
 808:	08 95       	ret
		break;	
		case'd':
		case'D':(connect==1)? (SET(PORTD,pin)):(CLEAR(PORTD,pin));
 80a:	41 30       	cpi	r20, 0x01	; 1
 80c:	69 f4       	brne	.+26     	; 0x828 <DIO_vConnectPullUp+0x106>
 80e:	22 b3       	in	r18, 0x12	; 18
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	ac 01       	movw	r20, r24
 816:	02 c0       	rjmp	.+4      	; 0x81c <DIO_vConnectPullUp+0xfa>
 818:	44 0f       	add	r20, r20
 81a:	55 1f       	adc	r21, r21
 81c:	6a 95       	dec	r22
 81e:	e2 f7       	brpl	.-8      	; 0x818 <DIO_vConnectPullUp+0xf6>
 820:	ba 01       	movw	r22, r20
 822:	62 2b       	or	r22, r18
 824:	62 bb       	out	0x12, r22	; 18
 826:	08 95       	ret
 828:	22 b3       	in	r18, 0x12	; 18
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	ac 01       	movw	r20, r24
 830:	02 c0       	rjmp	.+4      	; 0x836 <DIO_vConnectPullUp+0x114>
 832:	44 0f       	add	r20, r20
 834:	55 1f       	adc	r21, r21
 836:	6a 95       	dec	r22
 838:	e2 f7       	brpl	.-8      	; 0x832 <DIO_vConnectPullUp+0x110>
 83a:	ba 01       	movw	r22, r20
 83c:	60 95       	com	r22
 83e:	62 23       	and	r22, r18
 840:	62 bb       	out	0x12, r22	; 18
 842:	08 95       	ret

00000844 <DIO_WRITE_LowNipple>:
		break;
	}
}
void DIO_WRITE_LowNipple(unsigned char port,unsigned char val)
{
		val&=0x0f;
 844:	6f 70       	andi	r22, 0x0F	; 15
		switch(port)
 846:	84 34       	cpi	r24, 0x44	; 68
 848:	51 f1       	breq	.+84     	; 0x89e <__stack+0x3f>
 84a:	85 34       	cpi	r24, 0x45	; 69
 84c:	38 f4       	brcc	.+14     	; 0x85c <DIO_WRITE_LowNipple+0x18>
 84e:	82 34       	cpi	r24, 0x42	; 66
 850:	c1 f0       	breq	.+48     	; 0x882 <__stack+0x23>
 852:	83 34       	cpi	r24, 0x43	; 67
 854:	e8 f4       	brcc	.+58     	; 0x890 <__stack+0x31>
 856:	81 34       	cpi	r24, 0x41	; 65
 858:	41 f5       	brne	.+80     	; 0x8aa <__stack+0x4b>
 85a:	0c c0       	rjmp	.+24     	; 0x874 <__stack+0x15>
 85c:	82 36       	cpi	r24, 0x62	; 98
 85e:	89 f0       	breq	.+34     	; 0x882 <__stack+0x23>
 860:	83 36       	cpi	r24, 0x63	; 99
 862:	18 f4       	brcc	.+6      	; 0x86a <__stack+0xb>
 864:	81 36       	cpi	r24, 0x61	; 97
 866:	09 f5       	brne	.+66     	; 0x8aa <__stack+0x4b>
 868:	05 c0       	rjmp	.+10     	; 0x874 <__stack+0x15>
 86a:	83 36       	cpi	r24, 0x63	; 99
 86c:	89 f0       	breq	.+34     	; 0x890 <__stack+0x31>
 86e:	84 36       	cpi	r24, 0x64	; 100
 870:	e1 f4       	brne	.+56     	; 0x8aa <__stack+0x4b>
 872:	15 c0       	rjmp	.+42     	; 0x89e <__stack+0x3f>
		{	
			case'a':
			case 'A':
			PORTA&=0xf0;
 874:	8b b3       	in	r24, 0x1b	; 27
 876:	80 7f       	andi	r24, 0xF0	; 240
 878:	8b bb       	out	0x1b, r24	; 27
			PORTA|=val;
 87a:	8b b3       	in	r24, 0x1b	; 27
 87c:	68 2b       	or	r22, r24
 87e:	6b bb       	out	0x1b, r22	; 27
			break;
 880:	08 95       	ret
			case 'B':
			case'b':
			PORTB&=0xf0;
 882:	88 b3       	in	r24, 0x18	; 24
 884:	80 7f       	andi	r24, 0xF0	; 240
 886:	88 bb       	out	0x18, r24	; 24
			PORTB|=val;
 888:	88 b3       	in	r24, 0x18	; 24
 88a:	68 2b       	or	r22, r24
 88c:	68 bb       	out	0x18, r22	; 24
			break;
 88e:	08 95       	ret
			case'c':
			case 'C':
			PORTC&=0xf0;
 890:	85 b3       	in	r24, 0x15	; 21
 892:	80 7f       	andi	r24, 0xF0	; 240
 894:	85 bb       	out	0x15, r24	; 21
			PORTC|=val;
 896:	85 b3       	in	r24, 0x15	; 21
 898:	68 2b       	or	r22, r24
 89a:	65 bb       	out	0x15, r22	; 21
			break;
 89c:	08 95       	ret
			case 'D':
			case'd':
			PORTD&=0xf0;
 89e:	82 b3       	in	r24, 0x12	; 18
 8a0:	80 7f       	andi	r24, 0xF0	; 240
 8a2:	82 bb       	out	0x12, r24	; 18
			PORTD|=val;
 8a4:	82 b3       	in	r24, 0x12	; 18
 8a6:	68 2b       	or	r22, r24
 8a8:	62 bb       	out	0x12, r22	; 18
 8aa:	08 95       	ret

000008ac <DIO_WRITE_highNipple>:
		}
}
void DIO_WRITE_highNipple(unsigned char port,unsigned char val)
{
	val&=0x0f;
	val=val<<4;
 8ac:	62 95       	swap	r22
 8ae:	60 7f       	andi	r22, 0xF0	; 240
	switch(port)
 8b0:	84 34       	cpi	r24, 0x44	; 68
 8b2:	51 f1       	breq	.+84     	; 0x908 <DIO_WRITE_highNipple+0x5c>
 8b4:	85 34       	cpi	r24, 0x45	; 69
 8b6:	38 f4       	brcc	.+14     	; 0x8c6 <DIO_WRITE_highNipple+0x1a>
 8b8:	82 34       	cpi	r24, 0x42	; 66
 8ba:	c1 f0       	breq	.+48     	; 0x8ec <DIO_WRITE_highNipple+0x40>
 8bc:	83 34       	cpi	r24, 0x43	; 67
 8be:	e8 f4       	brcc	.+58     	; 0x8fa <DIO_WRITE_highNipple+0x4e>
 8c0:	81 34       	cpi	r24, 0x41	; 65
 8c2:	41 f5       	brne	.+80     	; 0x914 <DIO_WRITE_highNipple+0x68>
 8c4:	0c c0       	rjmp	.+24     	; 0x8de <DIO_WRITE_highNipple+0x32>
 8c6:	82 36       	cpi	r24, 0x62	; 98
 8c8:	89 f0       	breq	.+34     	; 0x8ec <DIO_WRITE_highNipple+0x40>
 8ca:	83 36       	cpi	r24, 0x63	; 99
 8cc:	18 f4       	brcc	.+6      	; 0x8d4 <DIO_WRITE_highNipple+0x28>
 8ce:	81 36       	cpi	r24, 0x61	; 97
 8d0:	09 f5       	brne	.+66     	; 0x914 <DIO_WRITE_highNipple+0x68>
 8d2:	05 c0       	rjmp	.+10     	; 0x8de <DIO_WRITE_highNipple+0x32>
 8d4:	83 36       	cpi	r24, 0x63	; 99
 8d6:	89 f0       	breq	.+34     	; 0x8fa <DIO_WRITE_highNipple+0x4e>
 8d8:	84 36       	cpi	r24, 0x64	; 100
 8da:	e1 f4       	brne	.+56     	; 0x914 <DIO_WRITE_highNipple+0x68>
 8dc:	15 c0       	rjmp	.+42     	; 0x908 <DIO_WRITE_highNipple+0x5c>
	{
		case'a':
		case 'A':
		PORTA&=0x0f;
 8de:	8b b3       	in	r24, 0x1b	; 27
 8e0:	8f 70       	andi	r24, 0x0F	; 15
 8e2:	8b bb       	out	0x1b, r24	; 27
		PORTA|=val;
 8e4:	8b b3       	in	r24, 0x1b	; 27
 8e6:	68 2b       	or	r22, r24
 8e8:	6b bb       	out	0x1b, r22	; 27
		break;
 8ea:	08 95       	ret
		case 'B':
		case'b':
		PORTB&=0x0f;
 8ec:	88 b3       	in	r24, 0x18	; 24
 8ee:	8f 70       	andi	r24, 0x0F	; 15
 8f0:	88 bb       	out	0x18, r24	; 24
		PORTB|=val;
 8f2:	88 b3       	in	r24, 0x18	; 24
 8f4:	68 2b       	or	r22, r24
 8f6:	68 bb       	out	0x18, r22	; 24
		break;
 8f8:	08 95       	ret
		case'c':
		case 'C':
		PORTC&=0x0f;
 8fa:	85 b3       	in	r24, 0x15	; 21
 8fc:	8f 70       	andi	r24, 0x0F	; 15
 8fe:	85 bb       	out	0x15, r24	; 21
		PORTC|=val;
 900:	85 b3       	in	r24, 0x15	; 21
 902:	68 2b       	or	r22, r24
 904:	65 bb       	out	0x15, r22	; 21
		break;
 906:	08 95       	ret
		case 'D':
		case'd':
		PORTD&=0x0f;
 908:	82 b3       	in	r24, 0x12	; 18
 90a:	8f 70       	andi	r24, 0x0F	; 15
 90c:	82 bb       	out	0x12, r24	; 18
		PORTD|=val;
 90e:	82 b3       	in	r24, 0x12	; 18
 910:	68 2b       	or	r22, r24
 912:	62 bb       	out	0x12, r22	; 18
 914:	08 95       	ret

00000916 <main>:

#include <avr/io.h>
#include "./HAL/LCD.h"
int main(void)
{
	LCD_vInit();
 916:	0e 94 88 00 	call	0x110	; 0x110 <LCD_vInit>
	ADC_vInt();
 91a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <ADC_vInt>
	LCD_vSend_string("Temprature =");
 91e:	80 e6       	ldi	r24, 0x60	; 96
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	0e 94 14 01 	call	0x228	; 0x228 <LCD_vSend_string>
    {
		
			volt=(ADC_u16Read()*2.5);
			if(volt>1000)
			{
				temp=(volt-1000)/10;
 926:	0a e0       	ldi	r16, 0x0A	; 10
 928:	10 e0       	ldi	r17, 0x00	; 0
				LCD_vSend_char(0xDF);
				LCD_vMove_Cursor(1,13);
			}
			else
			{
				temp=(1000-volt)/10;
 92a:	0f 2e       	mov	r0, r31
 92c:	f8 ee       	ldi	r31, 0xE8	; 232
 92e:	ef 2e       	mov	r14, r31
 930:	f3 e0       	ldi	r31, 0x03	; 3
 932:	ff 2e       	mov	r15, r31
 934:	f0 2d       	mov	r31, r0
	 unsigned short temp;
	 unsigned short volt;
    while(1)
    {
		
			volt=(ADC_u16Read()*2.5);
 936:	0e 94 61 01 	call	0x2c2	; 0x2c2 <ADC_u16Read>
 93a:	9c 01       	movw	r18, r24
 93c:	b9 01       	movw	r22, r18
 93e:	88 27       	eor	r24, r24
 940:	77 fd       	sbrc	r23, 7
 942:	80 95       	com	r24
 944:	98 2f       	mov	r25, r24
 946:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__floatsisf>
 94a:	20 e0       	ldi	r18, 0x00	; 0
 94c:	30 e0       	ldi	r19, 0x00	; 0
 94e:	40 e2       	ldi	r20, 0x20	; 32
 950:	50 e4       	ldi	r21, 0x40	; 64
 952:	0e 94 81 05 	call	0xb02	; 0xb02 <__mulsf3>
 956:	0e 94 ef 04 	call	0x9de	; 0x9de <__fixunssfsi>
			if(volt>1000)
 95a:	33 e0       	ldi	r19, 0x03	; 3
 95c:	69 3e       	cpi	r22, 0xE9	; 233
 95e:	73 07       	cpc	r23, r19
 960:	f8 f0       	brcs	.+62     	; 0x9a0 <main+0x8a>
			{
				temp=(volt-1000)/10;
 962:	cb 01       	movw	r24, r22
 964:	88 5e       	subi	r24, 0xE8	; 232
 966:	93 40       	sbci	r25, 0x03	; 3
 968:	b8 01       	movw	r22, r16
 96a:	0e 94 0c 06 	call	0xc18	; 0xc18 <__udivmodhi4>
 96e:	eb 01       	movw	r28, r22
				LCD_vSend_char(' ');
 970:	80 e2       	ldi	r24, 0x20	; 32
 972:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char((temp/10)+48);
 976:	ce 01       	movw	r24, r28
 978:	b8 01       	movw	r22, r16
 97a:	0e 94 0c 06 	call	0xc18	; 0xc18 <__udivmodhi4>
 97e:	c8 2f       	mov	r28, r24
 980:	86 2f       	mov	r24, r22
 982:	80 5d       	subi	r24, 0xD0	; 208
 984:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char((temp%10)+48);
 988:	8c 2f       	mov	r24, r28
 98a:	80 5d       	subi	r24, 0xD0	; 208
 98c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char(0xDF);
 990:	8f ed       	ldi	r24, 0xDF	; 223
 992:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vMove_Cursor(1,13);
 996:	81 e0       	ldi	r24, 0x01	; 1
 998:	6d e0       	ldi	r22, 0x0D	; 13
 99a:	0e 94 37 01 	call	0x26e	; 0x26e <LCD_vMove_Cursor>
 99e:	cb cf       	rjmp	.-106    	; 0x936 <main+0x20>
			}
			else
			{
				temp=(1000-volt)/10;
 9a0:	c7 01       	movw	r24, r14
 9a2:	86 1b       	sub	r24, r22
 9a4:	97 0b       	sbc	r25, r23
 9a6:	b8 01       	movw	r22, r16
 9a8:	0e 94 0c 06 	call	0xc18	; 0xc18 <__udivmodhi4>
 9ac:	eb 01       	movw	r28, r22
				LCD_vSend_char('-');
 9ae:	8d e2       	ldi	r24, 0x2D	; 45
 9b0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char((temp/10)+48);
 9b4:	ce 01       	movw	r24, r28
 9b6:	b8 01       	movw	r22, r16
 9b8:	0e 94 0c 06 	call	0xc18	; 0xc18 <__udivmodhi4>
 9bc:	c8 2f       	mov	r28, r24
 9be:	86 2f       	mov	r24, r22
 9c0:	80 5d       	subi	r24, 0xD0	; 208
 9c2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char((temp%10)+48);
 9c6:	8c 2f       	mov	r24, r28
 9c8:	80 5d       	subi	r24, 0xD0	; 208
 9ca:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vSend_char(0xDF);
 9ce:	8f ed       	ldi	r24, 0xDF	; 223
 9d0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCD_vSend_char>
				LCD_vMove_Cursor(1,13);
 9d4:	81 e0       	ldi	r24, 0x01	; 1
 9d6:	6d e0       	ldi	r22, 0x0D	; 13
 9d8:	0e 94 37 01 	call	0x26e	; 0x26e <LCD_vMove_Cursor>
 9dc:	ac cf       	rjmp	.-168    	; 0x936 <main+0x20>

000009de <__fixunssfsi>:
 9de:	70 d0       	rcall	.+224    	; 0xac0 <__fp_splitA>
 9e0:	88 f0       	brcs	.+34     	; 0xa04 <__fixunssfsi+0x26>
 9e2:	9f 57       	subi	r25, 0x7F	; 127
 9e4:	90 f0       	brcs	.+36     	; 0xa0a <__fixunssfsi+0x2c>
 9e6:	b9 2f       	mov	r27, r25
 9e8:	99 27       	eor	r25, r25
 9ea:	b7 51       	subi	r27, 0x17	; 23
 9ec:	a0 f0       	brcs	.+40     	; 0xa16 <__fixunssfsi+0x38>
 9ee:	d1 f0       	breq	.+52     	; 0xa24 <__fixunssfsi+0x46>
 9f0:	66 0f       	add	r22, r22
 9f2:	77 1f       	adc	r23, r23
 9f4:	88 1f       	adc	r24, r24
 9f6:	99 1f       	adc	r25, r25
 9f8:	1a f0       	brmi	.+6      	; 0xa00 <__fixunssfsi+0x22>
 9fa:	ba 95       	dec	r27
 9fc:	c9 f7       	brne	.-14     	; 0x9f0 <__fixunssfsi+0x12>
 9fe:	12 c0       	rjmp	.+36     	; 0xa24 <__fixunssfsi+0x46>
 a00:	b1 30       	cpi	r27, 0x01	; 1
 a02:	81 f0       	breq	.+32     	; 0xa24 <__fixunssfsi+0x46>
 a04:	77 d0       	rcall	.+238    	; 0xaf4 <__fp_zero>
 a06:	b1 e0       	ldi	r27, 0x01	; 1
 a08:	08 95       	ret
 a0a:	74 c0       	rjmp	.+232    	; 0xaf4 <__fp_zero>
 a0c:	67 2f       	mov	r22, r23
 a0e:	78 2f       	mov	r23, r24
 a10:	88 27       	eor	r24, r24
 a12:	b8 5f       	subi	r27, 0xF8	; 248
 a14:	39 f0       	breq	.+14     	; 0xa24 <__fixunssfsi+0x46>
 a16:	b9 3f       	cpi	r27, 0xF9	; 249
 a18:	cc f3       	brlt	.-14     	; 0xa0c <__fixunssfsi+0x2e>
 a1a:	86 95       	lsr	r24
 a1c:	77 95       	ror	r23
 a1e:	67 95       	ror	r22
 a20:	b3 95       	inc	r27
 a22:	d9 f7       	brne	.-10     	; 0xa1a <__fixunssfsi+0x3c>
 a24:	3e f4       	brtc	.+14     	; 0xa34 <__fixunssfsi+0x56>
 a26:	90 95       	com	r25
 a28:	80 95       	com	r24
 a2a:	70 95       	com	r23
 a2c:	61 95       	neg	r22
 a2e:	7f 4f       	sbci	r23, 0xFF	; 255
 a30:	8f 4f       	sbci	r24, 0xFF	; 255
 a32:	9f 4f       	sbci	r25, 0xFF	; 255
 a34:	08 95       	ret

00000a36 <__floatunsisf>:
 a36:	e8 94       	clt
 a38:	09 c0       	rjmp	.+18     	; 0xa4c <__floatsisf+0x12>

00000a3a <__floatsisf>:
 a3a:	97 fb       	bst	r25, 7
 a3c:	3e f4       	brtc	.+14     	; 0xa4c <__floatsisf+0x12>
 a3e:	90 95       	com	r25
 a40:	80 95       	com	r24
 a42:	70 95       	com	r23
 a44:	61 95       	neg	r22
 a46:	7f 4f       	sbci	r23, 0xFF	; 255
 a48:	8f 4f       	sbci	r24, 0xFF	; 255
 a4a:	9f 4f       	sbci	r25, 0xFF	; 255
 a4c:	99 23       	and	r25, r25
 a4e:	a9 f0       	breq	.+42     	; 0xa7a <__floatsisf+0x40>
 a50:	f9 2f       	mov	r31, r25
 a52:	96 e9       	ldi	r25, 0x96	; 150
 a54:	bb 27       	eor	r27, r27
 a56:	93 95       	inc	r25
 a58:	f6 95       	lsr	r31
 a5a:	87 95       	ror	r24
 a5c:	77 95       	ror	r23
 a5e:	67 95       	ror	r22
 a60:	b7 95       	ror	r27
 a62:	f1 11       	cpse	r31, r1
 a64:	f8 cf       	rjmp	.-16     	; 0xa56 <__floatsisf+0x1c>
 a66:	fa f4       	brpl	.+62     	; 0xaa6 <__floatsisf+0x6c>
 a68:	bb 0f       	add	r27, r27
 a6a:	11 f4       	brne	.+4      	; 0xa70 <__floatsisf+0x36>
 a6c:	60 ff       	sbrs	r22, 0
 a6e:	1b c0       	rjmp	.+54     	; 0xaa6 <__floatsisf+0x6c>
 a70:	6f 5f       	subi	r22, 0xFF	; 255
 a72:	7f 4f       	sbci	r23, 0xFF	; 255
 a74:	8f 4f       	sbci	r24, 0xFF	; 255
 a76:	9f 4f       	sbci	r25, 0xFF	; 255
 a78:	16 c0       	rjmp	.+44     	; 0xaa6 <__floatsisf+0x6c>
 a7a:	88 23       	and	r24, r24
 a7c:	11 f0       	breq	.+4      	; 0xa82 <__floatsisf+0x48>
 a7e:	96 e9       	ldi	r25, 0x96	; 150
 a80:	11 c0       	rjmp	.+34     	; 0xaa4 <__floatsisf+0x6a>
 a82:	77 23       	and	r23, r23
 a84:	21 f0       	breq	.+8      	; 0xa8e <__floatsisf+0x54>
 a86:	9e e8       	ldi	r25, 0x8E	; 142
 a88:	87 2f       	mov	r24, r23
 a8a:	76 2f       	mov	r23, r22
 a8c:	05 c0       	rjmp	.+10     	; 0xa98 <__floatsisf+0x5e>
 a8e:	66 23       	and	r22, r22
 a90:	71 f0       	breq	.+28     	; 0xaae <__floatsisf+0x74>
 a92:	96 e8       	ldi	r25, 0x86	; 134
 a94:	86 2f       	mov	r24, r22
 a96:	70 e0       	ldi	r23, 0x00	; 0
 a98:	60 e0       	ldi	r22, 0x00	; 0
 a9a:	2a f0       	brmi	.+10     	; 0xaa6 <__floatsisf+0x6c>
 a9c:	9a 95       	dec	r25
 a9e:	66 0f       	add	r22, r22
 aa0:	77 1f       	adc	r23, r23
 aa2:	88 1f       	adc	r24, r24
 aa4:	da f7       	brpl	.-10     	; 0xa9c <__floatsisf+0x62>
 aa6:	88 0f       	add	r24, r24
 aa8:	96 95       	lsr	r25
 aaa:	87 95       	ror	r24
 aac:	97 f9       	bld	r25, 7
 aae:	08 95       	ret

00000ab0 <__fp_split3>:
 ab0:	57 fd       	sbrc	r21, 7
 ab2:	90 58       	subi	r25, 0x80	; 128
 ab4:	44 0f       	add	r20, r20
 ab6:	55 1f       	adc	r21, r21
 ab8:	59 f0       	breq	.+22     	; 0xad0 <__fp_splitA+0x10>
 aba:	5f 3f       	cpi	r21, 0xFF	; 255
 abc:	71 f0       	breq	.+28     	; 0xada <__fp_splitA+0x1a>
 abe:	47 95       	ror	r20

00000ac0 <__fp_splitA>:
 ac0:	88 0f       	add	r24, r24
 ac2:	97 fb       	bst	r25, 7
 ac4:	99 1f       	adc	r25, r25
 ac6:	61 f0       	breq	.+24     	; 0xae0 <__fp_splitA+0x20>
 ac8:	9f 3f       	cpi	r25, 0xFF	; 255
 aca:	79 f0       	breq	.+30     	; 0xaea <__fp_splitA+0x2a>
 acc:	87 95       	ror	r24
 ace:	08 95       	ret
 ad0:	12 16       	cp	r1, r18
 ad2:	13 06       	cpc	r1, r19
 ad4:	14 06       	cpc	r1, r20
 ad6:	55 1f       	adc	r21, r21
 ad8:	f2 cf       	rjmp	.-28     	; 0xabe <__fp_split3+0xe>
 ada:	46 95       	lsr	r20
 adc:	f1 df       	rcall	.-30     	; 0xac0 <__fp_splitA>
 ade:	08 c0       	rjmp	.+16     	; 0xaf0 <__fp_splitA+0x30>
 ae0:	16 16       	cp	r1, r22
 ae2:	17 06       	cpc	r1, r23
 ae4:	18 06       	cpc	r1, r24
 ae6:	99 1f       	adc	r25, r25
 ae8:	f1 cf       	rjmp	.-30     	; 0xacc <__fp_splitA+0xc>
 aea:	86 95       	lsr	r24
 aec:	71 05       	cpc	r23, r1
 aee:	61 05       	cpc	r22, r1
 af0:	08 94       	sec
 af2:	08 95       	ret

00000af4 <__fp_zero>:
 af4:	e8 94       	clt

00000af6 <__fp_szero>:
 af6:	bb 27       	eor	r27, r27
 af8:	66 27       	eor	r22, r22
 afa:	77 27       	eor	r23, r23
 afc:	cb 01       	movw	r24, r22
 afe:	97 f9       	bld	r25, 7
 b00:	08 95       	ret

00000b02 <__mulsf3>:
 b02:	0b d0       	rcall	.+22     	; 0xb1a <__mulsf3x>
 b04:	78 c0       	rjmp	.+240    	; 0xbf6 <__fp_round>
 b06:	69 d0       	rcall	.+210    	; 0xbda <__fp_pscA>
 b08:	28 f0       	brcs	.+10     	; 0xb14 <__mulsf3+0x12>
 b0a:	6e d0       	rcall	.+220    	; 0xbe8 <__fp_pscB>
 b0c:	18 f0       	brcs	.+6      	; 0xb14 <__mulsf3+0x12>
 b0e:	95 23       	and	r25, r21
 b10:	09 f0       	breq	.+2      	; 0xb14 <__mulsf3+0x12>
 b12:	5a c0       	rjmp	.+180    	; 0xbc8 <__fp_inf>
 b14:	5f c0       	rjmp	.+190    	; 0xbd4 <__fp_nan>
 b16:	11 24       	eor	r1, r1
 b18:	ee cf       	rjmp	.-36     	; 0xaf6 <__fp_szero>

00000b1a <__mulsf3x>:
 b1a:	ca df       	rcall	.-108    	; 0xab0 <__fp_split3>
 b1c:	a0 f3       	brcs	.-24     	; 0xb06 <__mulsf3+0x4>

00000b1e <__mulsf3_pse>:
 b1e:	95 9f       	mul	r25, r21
 b20:	d1 f3       	breq	.-12     	; 0xb16 <__mulsf3+0x14>
 b22:	95 0f       	add	r25, r21
 b24:	50 e0       	ldi	r21, 0x00	; 0
 b26:	55 1f       	adc	r21, r21
 b28:	62 9f       	mul	r22, r18
 b2a:	f0 01       	movw	r30, r0
 b2c:	72 9f       	mul	r23, r18
 b2e:	bb 27       	eor	r27, r27
 b30:	f0 0d       	add	r31, r0
 b32:	b1 1d       	adc	r27, r1
 b34:	63 9f       	mul	r22, r19
 b36:	aa 27       	eor	r26, r26
 b38:	f0 0d       	add	r31, r0
 b3a:	b1 1d       	adc	r27, r1
 b3c:	aa 1f       	adc	r26, r26
 b3e:	64 9f       	mul	r22, r20
 b40:	66 27       	eor	r22, r22
 b42:	b0 0d       	add	r27, r0
 b44:	a1 1d       	adc	r26, r1
 b46:	66 1f       	adc	r22, r22
 b48:	82 9f       	mul	r24, r18
 b4a:	22 27       	eor	r18, r18
 b4c:	b0 0d       	add	r27, r0
 b4e:	a1 1d       	adc	r26, r1
 b50:	62 1f       	adc	r22, r18
 b52:	73 9f       	mul	r23, r19
 b54:	b0 0d       	add	r27, r0
 b56:	a1 1d       	adc	r26, r1
 b58:	62 1f       	adc	r22, r18
 b5a:	83 9f       	mul	r24, r19
 b5c:	a0 0d       	add	r26, r0
 b5e:	61 1d       	adc	r22, r1
 b60:	22 1f       	adc	r18, r18
 b62:	74 9f       	mul	r23, r20
 b64:	33 27       	eor	r19, r19
 b66:	a0 0d       	add	r26, r0
 b68:	61 1d       	adc	r22, r1
 b6a:	23 1f       	adc	r18, r19
 b6c:	84 9f       	mul	r24, r20
 b6e:	60 0d       	add	r22, r0
 b70:	21 1d       	adc	r18, r1
 b72:	82 2f       	mov	r24, r18
 b74:	76 2f       	mov	r23, r22
 b76:	6a 2f       	mov	r22, r26
 b78:	11 24       	eor	r1, r1
 b7a:	9f 57       	subi	r25, 0x7F	; 127
 b7c:	50 40       	sbci	r21, 0x00	; 0
 b7e:	8a f0       	brmi	.+34     	; 0xba2 <__mulsf3_pse+0x84>
 b80:	e1 f0       	breq	.+56     	; 0xbba <__mulsf3_pse+0x9c>
 b82:	88 23       	and	r24, r24
 b84:	4a f0       	brmi	.+18     	; 0xb98 <__mulsf3_pse+0x7a>
 b86:	ee 0f       	add	r30, r30
 b88:	ff 1f       	adc	r31, r31
 b8a:	bb 1f       	adc	r27, r27
 b8c:	66 1f       	adc	r22, r22
 b8e:	77 1f       	adc	r23, r23
 b90:	88 1f       	adc	r24, r24
 b92:	91 50       	subi	r25, 0x01	; 1
 b94:	50 40       	sbci	r21, 0x00	; 0
 b96:	a9 f7       	brne	.-22     	; 0xb82 <__mulsf3_pse+0x64>
 b98:	9e 3f       	cpi	r25, 0xFE	; 254
 b9a:	51 05       	cpc	r21, r1
 b9c:	70 f0       	brcs	.+28     	; 0xbba <__mulsf3_pse+0x9c>
 b9e:	14 c0       	rjmp	.+40     	; 0xbc8 <__fp_inf>
 ba0:	aa cf       	rjmp	.-172    	; 0xaf6 <__fp_szero>
 ba2:	5f 3f       	cpi	r21, 0xFF	; 255
 ba4:	ec f3       	brlt	.-6      	; 0xba0 <__mulsf3_pse+0x82>
 ba6:	98 3e       	cpi	r25, 0xE8	; 232
 ba8:	dc f3       	brlt	.-10     	; 0xba0 <__mulsf3_pse+0x82>
 baa:	86 95       	lsr	r24
 bac:	77 95       	ror	r23
 bae:	67 95       	ror	r22
 bb0:	b7 95       	ror	r27
 bb2:	f7 95       	ror	r31
 bb4:	e7 95       	ror	r30
 bb6:	9f 5f       	subi	r25, 0xFF	; 255
 bb8:	c1 f7       	brne	.-16     	; 0xbaa <__mulsf3_pse+0x8c>
 bba:	fe 2b       	or	r31, r30
 bbc:	88 0f       	add	r24, r24
 bbe:	91 1d       	adc	r25, r1
 bc0:	96 95       	lsr	r25
 bc2:	87 95       	ror	r24
 bc4:	97 f9       	bld	r25, 7
 bc6:	08 95       	ret

00000bc8 <__fp_inf>:
 bc8:	97 f9       	bld	r25, 7
 bca:	9f 67       	ori	r25, 0x7F	; 127
 bcc:	80 e8       	ldi	r24, 0x80	; 128
 bce:	70 e0       	ldi	r23, 0x00	; 0
 bd0:	60 e0       	ldi	r22, 0x00	; 0
 bd2:	08 95       	ret

00000bd4 <__fp_nan>:
 bd4:	9f ef       	ldi	r25, 0xFF	; 255
 bd6:	80 ec       	ldi	r24, 0xC0	; 192
 bd8:	08 95       	ret

00000bda <__fp_pscA>:
 bda:	00 24       	eor	r0, r0
 bdc:	0a 94       	dec	r0
 bde:	16 16       	cp	r1, r22
 be0:	17 06       	cpc	r1, r23
 be2:	18 06       	cpc	r1, r24
 be4:	09 06       	cpc	r0, r25
 be6:	08 95       	ret

00000be8 <__fp_pscB>:
 be8:	00 24       	eor	r0, r0
 bea:	0a 94       	dec	r0
 bec:	12 16       	cp	r1, r18
 bee:	13 06       	cpc	r1, r19
 bf0:	14 06       	cpc	r1, r20
 bf2:	05 06       	cpc	r0, r21
 bf4:	08 95       	ret

00000bf6 <__fp_round>:
 bf6:	09 2e       	mov	r0, r25
 bf8:	03 94       	inc	r0
 bfa:	00 0c       	add	r0, r0
 bfc:	11 f4       	brne	.+4      	; 0xc02 <__fp_round+0xc>
 bfe:	88 23       	and	r24, r24
 c00:	52 f0       	brmi	.+20     	; 0xc16 <__fp_round+0x20>
 c02:	bb 0f       	add	r27, r27
 c04:	40 f4       	brcc	.+16     	; 0xc16 <__fp_round+0x20>
 c06:	bf 2b       	or	r27, r31
 c08:	11 f4       	brne	.+4      	; 0xc0e <__fp_round+0x18>
 c0a:	60 ff       	sbrs	r22, 0
 c0c:	04 c0       	rjmp	.+8      	; 0xc16 <__fp_round+0x20>
 c0e:	6f 5f       	subi	r22, 0xFF	; 255
 c10:	7f 4f       	sbci	r23, 0xFF	; 255
 c12:	8f 4f       	sbci	r24, 0xFF	; 255
 c14:	9f 4f       	sbci	r25, 0xFF	; 255
 c16:	08 95       	ret

00000c18 <__udivmodhi4>:
 c18:	aa 1b       	sub	r26, r26
 c1a:	bb 1b       	sub	r27, r27
 c1c:	51 e1       	ldi	r21, 0x11	; 17
 c1e:	07 c0       	rjmp	.+14     	; 0xc2e <__udivmodhi4_ep>

00000c20 <__udivmodhi4_loop>:
 c20:	aa 1f       	adc	r26, r26
 c22:	bb 1f       	adc	r27, r27
 c24:	a6 17       	cp	r26, r22
 c26:	b7 07       	cpc	r27, r23
 c28:	10 f0       	brcs	.+4      	; 0xc2e <__udivmodhi4_ep>
 c2a:	a6 1b       	sub	r26, r22
 c2c:	b7 0b       	sbc	r27, r23

00000c2e <__udivmodhi4_ep>:
 c2e:	88 1f       	adc	r24, r24
 c30:	99 1f       	adc	r25, r25
 c32:	5a 95       	dec	r21
 c34:	a9 f7       	brne	.-22     	; 0xc20 <__udivmodhi4_loop>
 c36:	80 95       	com	r24
 c38:	90 95       	com	r25
 c3a:	bc 01       	movw	r22, r24
 c3c:	cd 01       	movw	r24, r26
 c3e:	08 95       	ret

00000c40 <_exit>:
 c40:	f8 94       	cli

00000c42 <__stop_program>:
 c42:	ff cf       	rjmp	.-2      	; 0xc42 <__stop_program>
